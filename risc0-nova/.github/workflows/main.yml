name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Full history is required by license-check.py
          fetch-depth: 0
      - uses: ./.github/actions/rustup
      - name: Install cargo-sort
        uses: risc0/cargo-install@2cfb0024938d23011106cbf127b393bc83fddba1
        with:
          crate: cargo-sort
          version: "1.0"
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: cargo fmt --all --check
      - run: cargo fmt --all --check --manifest-path examples/Cargo.toml
      - run: cargo fmt --all --check --manifest-path templates/bonsai/Cargo.toml
      - run: cargo sort --workspace --check
      - run: cargo sort --workspace --check examples
      - run: cargo sort --workspace --check templates/bonsai
      - run: npm install
        working-directory: templates/bonsai
      - run: npm run ci
        working-directory: templates/bonsai
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: python license-check.py

  test:
    runs-on: [self-hosted, prod, "${{ matrix.os }}", "${{ matrix.device }}"]
    strategy:
      fail-fast: false
      matrix:
        os: [Linux, macOS]
        feature: [default]
        device: [cpu]
        include:
          - os: Linux
            feature: cuda
            device: nvidia_rtx_a5000
          - os: macOS
            feature: metal
            device: apple_m2_pro
    env:
      FEATURE: ${{ matrix.feature }}
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/rustup
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - uses: ./.github/actions/sccache
      - run: npm install
        working-directory: templates/bonsai
      - run: cargo test -F $FEATURE
      - run: cargo test -F $FEATURE --tests -- --ignored
      - run: cargo test -F $FEATURE --manifest-path examples/Cargo.toml
      - run: PATH=$PWD/node_modules/.bin:$PATH cargo test -F $FEATURE
        working-directory: templates/bonsai
      - run: cargo build --manifest-path risc0/wasm/Cargo.toml --target wasm32-unknown-unknown
        if: matrix.device == 'cpu'
      - run: cargo check -F $FEATURE --benches
      - run: cargo check -p bootstrap
        if: matrix.device == 'cpu'
      - run: cargo check -p risc0-build
        if: matrix.device == 'cpu'
      - run: cargo check -F $FEATURE -p risc0-circuit-rv32im
      - run: cargo check -p risc0-core
        if: matrix.device == 'cpu'
      - run: cargo check -F $FEATURE -p risc0-r0vm
      - run: cargo check -F $FEATURE -p risc0-sys
      - run: cargo check -F $FEATURE -p risc0-zkp
      - run: cargo check -F $FEATURE -p risc0-zkvm
      - run: sccache --show-stats

  doc:
    runs-on: [self-hosted, prod, Linux, cpu]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/rustup
      - uses: ./.github/actions/sccache
      - run: RISC0_SKIP_BUILD=1 cargo doc --no-deps --exclude=risc0-zkvm-methods --workspace
